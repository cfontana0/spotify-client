{"version":3,"sources":["constants/actionTypes.js","store/index.js","serviceWorker.js","components/header.js","components/player.js","utils/api.js","actions/home.js","utils/spotify.js","containers/home.js","index.js","reducers/home.js","reducers/index.js","store/configureStore.production.js"],"names":["__webpack_require__","d","__webpack_exports__","ON_PLAYLIST","ON_PROFILE","ON_PLAYLIST_SONGS","ON_LOGOUT","ON_PLAYLIST_ERROR","ON_PROFILE_ERROR","ON_PLAYLIST_SONGS_ERROR","ON_LOGOUT_ERROR","module","exports","require","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","TopHeader","_this$props","this","props","profile","logged","onClickLogout","name","display_name","image","images","url","react_default","a","createElement","Segment","inverted","Feed","Event","className","Label","alt","src","Content","Summary","User","Button","circular","icon","onClick","Component","Player","_this$props$song","song","track","preview_url","lib_default","autoPlay","concat","artists","profileApi","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","accessToken","response","wrap","_context","prev","next","localStorage","getItem","axios","defaults","headers","common","Authorization","get","sent","abrupt","stop","apply","arguments","playlistApi","_ref2","_callee2","userId","_context2","_x","playlistSongsApi","_ref3","_callee3","playlistId","_context3","_x2","_x3","onProfileError","payload","type","getProfile","dispatch","status","data","onPlaylistError","getPlaylist","onPlaylistSongsError","getPlaylistSongs","logoutAction","clear","href","onLogoutActionError","isAuth","e","hashParams","r","q","hash","substring","exec","decodeURIComponent","access_token","setItem","clientInformation","Home","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nextRequest","selectedPlaylist","selectedSong","playlistOptions","key","text","value","loading","setState","actions","home","automatedTest","id","checkError","playlist","songs","items","forEach","item","push","_this2","_this$props$home2","toast","title","description","list","_this$props$home3","length","find","getSongsForPlaylist","_this3","_this$state","ListPlaylist","map","ListSongs","Table","Row","selectSong","Cell","Image","album","height","moment","utc","duration_ms","format","Container","fluid","header","logout","Header","as","Icon","Dropdown","inline","options","defaultValue","onChange","pickFromDropdown","Grid","celled","columns","Column","width","Dimmer","active","Loader","indeterminate","tracks","total","basic","collapsing","HeaderCell","Body","authSpotify","color","player","build","connect","bindActionCreators","store","configureStore","ReactDOM","render","es","containers_home","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","initialState","rootReducer","combineReducers","routing","form","undefined","action","actionTypes","objectSpread","enhancer","applyMiddleware","thunk","createStore"],"mappings":"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","file":"static/js/main.655ce4f2.chunk.js","sourcesContent":["export const ON_PLAYLIST = 'ON_PLAYLIST';\nexport const ON_PROFILE = 'ON_PROFILE';\nexport const ON_PLAYLIST_SONGS = 'ON_PLAYLIST_SONGS';\nexport const ON_LOGOUT = 'ON_LOGOUT';\nexport const ON_PLAYLIST_ERROR = 'ON_PLAYLIST_ERROR';\nexport const ON_PROFILE_ERROR = 'ON_PROFILE_ERROR';\nexport const ON_PLAYLIST_SONGS_ERROR = 'ON_PLAYLIST_SONGS_ERROR';\nexport const ON_LOGOUT_ERROR = 'ON_LOGOUT_ERROR';\n","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./configureStore.production');\n} else {\n  module.exports = require('./configureStore.development');\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { Feed, Segment, Button } from 'semantic-ui-react';\n\nclass TopHeader extends Component {\n  render() {\n    const { profile, logged, onClickLogout } = this.props;\n    const name = profile && profile.display_name;\n    const image = profile && profile.images ? profile.images[0].url : null;\n\n    return (\n      <Segment inverted>\n        <Feed>\n          <Feed.Event className=\"menu-user\">\n            <Feed.Label>{image && <img alt={name} src={image} />}</Feed.Label>\n            <Feed.Content>\n              <Feed.Summary>\n                <Feed.User>{name}</Feed.User>\n                {logged && (\n                  <Button\n                    circular\n                    icon=\"log out\"\n                    className=\"logout\"\n                    onClick={onClickLogout}\n                  />\n                )}\n              </Feed.Summary>\n            </Feed.Content>\n          </Feed.Event>\n        </Feed>\n      </Segment>\n    );\n  }\n}\n\nexport default TopHeader;\n","import React, { Component } from 'react';\nimport AudioPlayer from 'react-h5-audio-player';\n\nclass Player extends Component {\n  render() {\n    const { song = {} } = this.props;\n    const { track } = song;\n    return (\n      <div className=\"player\">\n        {track.preview_url && <AudioPlayer autoPlay src={track.preview_url} />}\n        {track.preview_url && (\n          <div className=\"playingSong\">{`${track.name} ${\n            track.artists[0].name\n          }`}</div>\n        )}\n        {!track.preview_url && (\n          <div className=\"noPreview\">Sorry, this song is not available.</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import axios from 'axios';\n\nexport const profileApi = async () => {\n  const accessToken = window.localStorage.getItem('access_token');\n\n  if (accessToken) {\n    axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n  }\n\n  const response = await axios.get(`https://api.spotify.com/v1/me`);\n\n  return response;\n};\n\nexport const playlistApi = async userId => {\n  const accessToken = window.localStorage.getItem('access_token');\n\n  if (accessToken) {\n    axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n  }\n\n  const response = await axios.get(\n    `https://api.spotify.com/v1/users/${userId}/playlists`,\n  );\n\n  return response;\n};\n\nexport const playlistSongsApi = async (userId, playlistId) => {\n  const accessToken = window.localStorage.getItem('access_token');\n\n  if (accessToken) {\n    axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\n  }\n\n  const response = await axios.get(\n    `https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\n  );\n\n  return response;\n};\n","import { playlistApi, profileApi, playlistSongsApi } from '../utils/api';\nimport {\n  ON_PLAYLIST,\n  ON_PROFILE,\n  ON_PLAYLIST_SONGS,\n  ON_LOGOUT,\n  ON_PLAYLIST_ERROR,\n  ON_PROFILE_ERROR,\n  ON_PLAYLIST_SONGS_ERROR,\n  ON_LOGOUT_ERROR,\n} from '../constants/actionTypes';\n\nconst onProfileSuccess = payload => ({\n  type: ON_PROFILE,\n  payload,\n});\n\nconst onProfileError = payload => ({\n  ON_PROFILE_ERROR,\n  type: ON_PROFILE_ERROR,\n  payload,\n});\n\nexport const getProfile = () => async dispatch => {\n  const response = await profileApi();\n\n  if (response.status === 200) {\n    return dispatch(onProfileSuccess(response.data));\n  }\n\n  return dispatch(onProfileError(response));\n};\n\nconst onPlaylistSuccess = payload => ({\n  type: ON_PLAYLIST,\n  payload,\n});\n\nconst onPlaylistError = payload => ({\n  type: ON_PLAYLIST_ERROR,\n  payload,\n});\n\nexport const getPlaylist = userId => async dispatch => {\n  const response = await playlistApi(userId);\n\n  if (response.status === 200) {\n    return dispatch(onPlaylistSuccess(response.data));\n  }\n\n  return dispatch(onPlaylistError(response));\n};\n\nconst onPlaylistSongsSuccess = payload => ({\n  type: ON_PLAYLIST_SONGS,\n  payload,\n});\n\nconst onPlaylistSongsError = payload => ({\n  type: ON_PLAYLIST_SONGS_ERROR,\n  payload,\n});\n\nexport const getPlaylistSongs = (userId, playlistId) => async dispatch => {\n  const response = await playlistSongsApi(userId, playlistId);\n\n  if (response.status === 200) {\n    return dispatch(onPlaylistSongsSuccess(response.data));\n  }\n\n  return dispatch(onPlaylistSongsError(response));\n};\n\nconst onLogoutActionSuccess = payload => ({\n  type: ON_LOGOUT,\n  payload,\n});\n\nconst onLogoutActionError = payload => ({\n  type: ON_LOGOUT_ERROR,\n  payload,\n});\n\nexport const logoutAction = () => dispatch => {\n  try {\n    window.localStorage.clear();\n    window.location.href = '/';\n    return dispatch(onLogoutActionSuccess());\n  } catch (error) {\n    return dispatch(onLogoutActionError(error));\n  }\n};\n","export const auth = () => {\n  // http://localhost:3000/callback#access_token=BQD_9OmgJ7YiPJof0v2zktVuopvwrKyDOM5IktAtRA8V0KGSMa4nZhTQjJZsVbkdl0PJO9T3xLcFrOJKzzEvVd7R2Auc1pOye-DObMz9JVL96mTFtIe_2Bbp0v0qufoSIMY2Vej5DOrQbSEPwyrIidBIGV7XH_q9zkbxPkrITin0iWQlnrYYrf5JPZgMHTKDZi7OjLGW5oAYVmWEo694Pu2iYiHko656SsSLMPc7tWoU4kVTIw6cy-a8IcmyzWvHWfX3a0AWkrw65l4TbxsGGgI6j91YxMshhA&token_type=Bearer&expires_in=3600\n  const clientId = '860725a4e08640199e5261d2a8a5d07c';\n  const redirectUri = 'http://localhost:3000/callback';\n  window.location.href = `https://accounts.spotify.com/authorize?client_id=${clientId}&scope=playlist-read-private%20playlist-read-collaborative%20playlist-modify-public%20user-read-recently-played%20playlist-modify-private%20ugc-image-upload%20user-follow-modify%20user-follow-read%20user-library-read%20user-library-modify%20user-read-private%20user-read-email%20user-top-read%20user-read-playback-state&response_type=token&redirect_uri=${redirectUri}`;\n};\n\nexport const isAuth = () => {\n  const hashParams = {};\n\n  let e;\n  const r = /([^&;=]+)=?([^&;]*)/g;\n  const q = window.location.hash.substring(1);\n\n  while ((e = r.exec(q))) {\n    hashParams[e[1]] = decodeURIComponent(e[2]);\n  }\n\n  if (hashParams.access_token) {\n    window.localStorage.setItem('access_token', hashParams.access_token);\n  }\n\n  // FOR TEST ONLY\n  if (!window.clientInformation) {\n    return true;\n  }\n\n  return !!hashParams.access_token;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n  Grid,\n  Container,\n  Table,\n  Image,\n  Button,\n  Icon,\n  Dropdown,\n  Header,\n  Dimmer,\n  Loader,\n} from 'semantic-ui-react';\nimport moment from 'moment';\nimport { SemanticToastContainer, toast } from 'react-semantic-toasts';\nimport { TopHeader, Player } from '../components';\nimport {\n  getProfile,\n  getPlaylist,\n  getPlaylistSongs,\n  logoutAction,\n} from '../actions/home';\nimport { isAuth, auth } from '../utils/spotify';\nimport 'react-semantic-toasts/styles/react-semantic-alert.css';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.nextRequest = null;\n    this.state = {\n      selectedPlaylist: null,\n      selectedSong: null,\n      playlistOptions: [\n        { key: 'PICK ONE', text: 'PICK ONE', value: 'PICK ONE' },\n      ],\n      loading: true,\n    };\n  }\n\n  async componentDidMount() {\n    const hasToken = isAuth();\n\n    if (!hasToken) {\n      this.setState({ loading: false });\n      return;\n    }\n\n    const { actions } = this.props;\n    await actions.getProfile();\n    const { home } = this.props;\n    const { profile, automatedTest } = home;\n\n    if (profile && profile.id) {\n      await actions.getPlaylist(profile.id);\n      this.checkError();\n      const { playlist, songs } = this.props.home;\n      const playlistOptions = [...this.state.playlistOptions];\n\n      playlist.items.forEach(item => {\n        playlistOptions.push({\n          key: item.id,\n          text: item.name,\n          value: item.id,\n        });\n      });\n\n      this.setState({ playlistOptions, loading: false });\n      if (automatedTest) {\n        this.setState({\n          selectedPlaylist: playlist.items[0],\n          selectedSong: songs.items[0],\n        });\n      }\n    } else {\n      this.setState({ loading: false });\n    }\n  }\n\n  getSongsForPlaylist(selectedPlaylist) {\n    const { home = {}, actions } = this.props;\n    const { profile } = home;\n    this.setState({ loading: true }, async () => {\n      await actions.getPlaylistSongs(profile.id, selectedPlaylist.id);\n      this.checkError();\n      this.setState({ selectedPlaylist, loading: false });\n    });\n  }\n\n  checkError() {\n    const { home } = this.props;\n    const { error } = home;\n    if (error) {\n      toast({\n        title: 'Oops!',\n        description: error,\n      });\n    }\n  }\n\n  logout() {\n    const { actions } = this.props;\n    actions.logoutAction();\n  }\n\n  authSpotify() {\n    auth();\n  }\n\n  pickFromDropdown(list) {\n    const { home = {} } = this.props;\n    const { playlist } = home;\n    const id = list.value;\n\n    if (\n      id !== 'PICK ONE' &&\n      playlist &&\n      playlist.items &&\n      playlist.items.length > 0\n    ) {\n      const selectedPlaylist = playlist.items.find(item => item.id === id);\n      this.getSongsForPlaylist(selectedPlaylist);\n    }\n  }\n\n  selectSong(selectedSong) {\n    this.setState({ selectedSong });\n  }\n\n  render() {\n    const {\n      selectedPlaylist,\n      selectedSong,\n      playlistOptions,\n      loading,\n    } = this.state;\n\n    const { home } = this.props;\n    const { profile, playlist, songs } = home;\n\n    const ListPlaylist = ((playlist && playlist.items) || []).map(item => (\n      <p key={item.id} onClick={() => this.getSongsForPlaylist(item)}>\n        {item.name}\n      </p>\n    ));\n\n    const ListSongs = ((songs && songs.items) || []).map(song => {\n      const { track } = song;\n\n      return (\n        <Table.Row key={track.id} onClick={() => this.selectSong(song)}>\n          <Table.Cell>\n            <Image\n              src={track.album.images[0].url}\n              height=\"30\"\n              className=\"trackImg\"\n            />\n          </Table.Cell>\n          <Table.Cell>{track.name}</Table.Cell>\n          <Table.Cell>{track.artists[0].name}</Table.Cell>\n          <Table.Cell>{track.album.name}</Table.Cell>\n          <Table.Cell>\n            {moment.utc(track.duration_ms).format('mm:ss')}\n          </Table.Cell>\n        </Table.Row>\n      );\n    });\n\n    return (\n      <Container fluid className=\"home\">\n        <TopHeader\n          profile={profile}\n          onClickLogout={() => this.logout()}\n          logged={!!profile}\n        />\n        {profile && (\n          <Header as=\"h4\">\n            <Icon name=\"spotify\" />\n            <Header.Content>\n              PLAYLIST:{' '}\n              <Dropdown\n                inline\n                header=\"Adjust time span\"\n                options={playlistOptions}\n                defaultValue={playlistOptions[0].value}\n                onChange={(e, list) => this.pickFromDropdown(list)}\n              />\n            </Header.Content>\n          </Header>\n        )}\n        <Grid celled>\n          <Grid.Row columns={10}>\n            {(!loading || playlist) && (\n              <Grid.Column width={3}>\n                <p className=\"titleText\">PLAYLIST</p>\n                {!profile && <p>Login to continue</p>}\n                {profile && playlist === null && <p>There are no playlist</p>}\n                {ListPlaylist}\n              </Grid.Column>\n            )}\n            {loading && (\n              <Dimmer active>\n                <Loader indeterminate>Loading Playlist</Loader>\n              </Dimmer>\n            )}\n            {selectedPlaylist && (\n              <Grid.Column width={13}>\n                <div className=\"playlistHead\">\n                  <div className=\"phLeft\">\n                    <Image src={selectedPlaylist.images[0].url} height=\"100\" />\n                  </div>\n                  <div className=\"phRight\">\n                    <div className=\"phTitle\">{selectedPlaylist.name}</div>\n                    <div className=\"phSub\">\n                      {selectedPlaylist.tracks.total} songs\n                    </div>\n                  </div>\n                </div>\n                <Table basic=\"very\" celled collapsing>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>COVER</Table.HeaderCell>\n                      <Table.HeaderCell>SONG</Table.HeaderCell>\n                      <Table.HeaderCell>ARTIST</Table.HeaderCell>\n                      <Table.HeaderCell>ALBUM</Table.HeaderCell>\n                      <Table.HeaderCell>TIME</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>{ListSongs}</Table.Body>\n                </Table>\n              </Grid.Column>\n            )}\n            {!loading && !selectedPlaylist && (\n              <Grid.Column width={13}>\n                <div className=\"playlistHead\">\n                  <div className=\"phLeft\" />\n                  <div className=\"phRight\">\n                    <div className=\"phTitle\">\n                      {profile ? 'Playlist' : 'Hi there'}\n                    </div>\n                    <div className=\"phSub\">\n                      {profile\n                        ? '0 songs'\n                        : 'Please, login with Spotify to continue.'}\n                    </div>\n                  </div>\n                </div>\n                {!profile && (\n                  <Button onClick={this.authSpotify} color=\"teal\">\n                    <Icon name=\"spotify\" /> Login with Spotify\n                  </Button>\n                )}\n              </Grid.Column>\n            )}\n          </Grid.Row>\n        </Grid>\n        {selectedSong && <Player song={selectedSong} />}\n        <SemanticToastContainer />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = ({ home }) => ({ home });\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    { getProfile, getPlaylist, getPlaylistSongs, logoutAction },\n    dispatch,\n  ),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'semantic-ui-css/semantic.min.css';\nimport './styles/index.css';\nimport './styles/home.css';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store';\nimport Home from './containers/home';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Home />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.register();\n","import * as actionTypes from '../constants/actionTypes';\n\nconst initialState = {\n  playlist: null,\n  profile: null,\n  songs: [],\n  error: null,\n  automatedTest: false,\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.ON_PLAYLIST:\n      return { ...state, playlist: action.payload };\n    case actionTypes.ON_PROFILE:\n      return { ...state, profile: action.payload };\n    case actionTypes.ON_PLAYLIST_SONGS:\n      return { ...state, songs: action.payload };\n    case actionTypes.ON_LOGOUT:\n      return { ...state, playlist: null, profile: null, songs: [] };\n    case actionTypes.ON_PLAYLIST_ERROR:\n      return {\n        ...state,\n        error: 'There was an error trying to get your playlist',\n      };\n    case actionTypes.ON_PROFILE_ERROR:\n      return {\n        ...state,\n        error: 'There was an error trying to get your profile',\n      };\n    case actionTypes.ON_PLAYLIST_SONGS_ERROR:\n      return {\n        ...state,\n        error: 'There was an error trying to get your songs',\n      };\n    case actionTypes.ON_LOGOUT_ERROR:\n      return {\n        ...state,\n        error: 'There was an error trying to logout',\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { routerReducer as routing } from 'react-router-redux';\nimport { reducer as form } from 'redux-form';\nimport home from './home';\n\nconst rootReducer = combineReducers({\n  routing,\n  form,\n  home,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst enhancer = applyMiddleware(thunk);\n\nexport default function configureStore(initialState) {\n  return createStore(rootReducer, initialState, enhancer);\n}\n"],"sourceRoot":""}